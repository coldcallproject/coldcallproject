{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nimport PropTypes from \"prop-types\";\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { useContext } from 'react';\nimport { EuiCheckbox } from '../../form/checkbox';\nimport { EuiMarkdownContext } from '../markdown_context';\nimport { htmlIdGenerator } from '../../../services/accessibility';\n\nvar CheckboxParser = function CheckboxParser() {\n  var Parser = this.Parser;\n  var tokenizers = Parser.prototype.blockTokenizers;\n  var methods = Parser.prototype.blockMethods;\n\n  var tokenizeCheckbox = function tokenizeCheckbox(eat, value, silent) {\n    /**\n     * optional leading whitespace & single (dash or asterisk) mix\n     * square brackets, optionally containing whitespace and `x`\n     * optional whitespace\n     * remainder of the line is consumed as the textbox label\n     */\n    var checkboxMatch = value.match(/^(\\s*[-*]\\s*)?\\[([\\sx]*)\\](.+)/);\n    if (checkboxMatch == null) return false;\n\n    if (silent) {\n      return true;\n    }\n\n    var _checkboxMatch = _slicedToArray(checkboxMatch, 4),\n        match = _checkboxMatch[0],\n        _checkboxMatch$ = _checkboxMatch[1],\n        lead = _checkboxMatch$ === void 0 ? '' : _checkboxMatch$,\n        checkboxStatus = _checkboxMatch[2],\n        text = _checkboxMatch[3];\n\n    var isChecked = checkboxStatus.indexOf('x') !== -1;\n    var now = eat.now();\n    var offset = match.length - text.length;\n    now.column += offset;\n    now.offset += offset;\n    var children = this.tokenizeInline(text, now);\n    return eat(match)({\n      type: 'checkboxPlugin',\n      lead: lead,\n      label: text,\n      isChecked: isChecked,\n      children: children\n    });\n  };\n\n  tokenizers.checkbox = tokenizeCheckbox;\n  methods.splice(methods.indexOf('list'), 0, 'checkbox'); // Run it just before default `list` plugin to inject our own idea of checkboxes.\n};\n\nvar CheckboxMarkdownRenderer = function CheckboxMarkdownRenderer(_ref) {\n  var position = _ref.position,\n      lead = _ref.lead,\n      label = _ref.label,\n      isChecked = _ref.isChecked,\n      children = _ref.children;\n\n  var _useContext = useContext(EuiMarkdownContext),\n      replaceNode = _useContext.replaceNode;\n\n  return /*#__PURE__*/React.createElement(EuiCheckbox, {\n    id: htmlIdGenerator()(),\n    checked: isChecked,\n    label: children,\n    onChange: function onChange() {\n      replaceNode(position, \"\".concat(lead, \"[\").concat(isChecked ? ' ' : 'x', \"]\").concat(label));\n    }\n  });\n};\n\nCheckboxMarkdownRenderer.propTypes = {\n  type: PropTypes.oneOf([\"checkboxPlugin\"]).isRequired,\n  lead: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  isChecked: PropTypes.bool.isRequired,\n  position: PropTypes.shape({\n    start: PropTypes.shape({\n      line: PropTypes.number.isRequired,\n      column: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired\n    }).isRequired,\n    end: PropTypes.shape({\n      line: PropTypes.number.isRequired,\n      column: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport { CheckboxParser as parser, CheckboxMarkdownRenderer as renderer };","map":{"version":3,"sources":["/Users/inwoo/Projects/coldcallproject/coldcallproject/node_modules/@elastic/eui/es/components/markdown_editor/plugins/markdown_checkbox.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","PropTypes","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","isArray","React","useContext","EuiCheckbox","EuiMarkdownContext","htmlIdGenerator","CheckboxParser","Parser","tokenizers","blockTokenizers","methods","blockMethods","tokenizeCheckbox","eat","silent","checkboxMatch","match","_checkboxMatch","_checkboxMatch$","lead","checkboxStatus","text","isChecked","indexOf","now","offset","column","children","tokenizeInline","type","label","checkbox","splice","CheckboxMarkdownRenderer","_ref","position","_useContext","replaceNode","createElement","id","checked","onChange","concat","propTypes","oneOf","isRequired","string","bool","shape","start","line","number","end","parser","renderer"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nimport PropTypes from \"prop-types\";\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext } from 'react';\nimport { EuiCheckbox } from '../../form/checkbox';\nimport { EuiMarkdownContext } from '../markdown_context';\nimport { htmlIdGenerator } from '../../../services/accessibility';\n\nvar CheckboxParser = function CheckboxParser() {\n  var Parser = this.Parser;\n  var tokenizers = Parser.prototype.blockTokenizers;\n  var methods = Parser.prototype.blockMethods;\n\n  var tokenizeCheckbox = function tokenizeCheckbox(eat, value, silent) {\n    /**\n     * optional leading whitespace & single (dash or asterisk) mix\n     * square brackets, optionally containing whitespace and `x`\n     * optional whitespace\n     * remainder of the line is consumed as the textbox label\n     */\n    var checkboxMatch = value.match(/^(\\s*[-*]\\s*)?\\[([\\sx]*)\\](.+)/);\n    if (checkboxMatch == null) return false;\n\n    if (silent) {\n      return true;\n    }\n\n    var _checkboxMatch = _slicedToArray(checkboxMatch, 4),\n        match = _checkboxMatch[0],\n        _checkboxMatch$ = _checkboxMatch[1],\n        lead = _checkboxMatch$ === void 0 ? '' : _checkboxMatch$,\n        checkboxStatus = _checkboxMatch[2],\n        text = _checkboxMatch[3];\n\n    var isChecked = checkboxStatus.indexOf('x') !== -1;\n    var now = eat.now();\n    var offset = match.length - text.length;\n    now.column += offset;\n    now.offset += offset;\n    var children = this.tokenizeInline(text, now);\n    return eat(match)({\n      type: 'checkboxPlugin',\n      lead: lead,\n      label: text,\n      isChecked: isChecked,\n      children: children\n    });\n  };\n\n  tokenizers.checkbox = tokenizeCheckbox;\n  methods.splice(methods.indexOf('list'), 0, 'checkbox'); // Run it just before default `list` plugin to inject our own idea of checkboxes.\n};\n\nvar CheckboxMarkdownRenderer = function CheckboxMarkdownRenderer(_ref) {\n  var position = _ref.position,\n      lead = _ref.lead,\n      label = _ref.label,\n      isChecked = _ref.isChecked,\n      children = _ref.children;\n\n  var _useContext = useContext(EuiMarkdownContext),\n      replaceNode = _useContext.replaceNode;\n\n  return /*#__PURE__*/React.createElement(EuiCheckbox, {\n    id: htmlIdGenerator()(),\n    checked: isChecked,\n    label: children,\n    onChange: function onChange() {\n      replaceNode(position, \"\".concat(lead, \"[\").concat(isChecked ? ' ' : 'x', \"]\").concat(label));\n    }\n  });\n};\n\nCheckboxMarkdownRenderer.propTypes = {\n  type: PropTypes.oneOf([\"checkboxPlugin\"]).isRequired,\n  lead: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  isChecked: PropTypes.bool.isRequired,\n  position: PropTypes.shape({\n    start: PropTypes.shape({\n      line: PropTypes.number.isRequired,\n      column: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired\n    }).isRequired,\n    end: PropTypes.shape({\n      line: PropTypes.number.isRequired,\n      column: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport { CheckboxParser as parser, CheckboxMarkdownRenderer as renderer };"]},"metadata":{},"sourceType":"module"}