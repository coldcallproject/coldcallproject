{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport { useMemo, useReducer } from 'react';\nimport { assertNever } from '../common';\n\nfunction isMouseEvent(event) {\n  return _typeof(event) === 'object' && 'pageX' in event && 'pageY' in event;\n}\n\nexport var pxToPercent = function pxToPercent(proportion, whole) {\n  if (whole < 1 || proportion < 0) return 0;\n  return proportion / whole * 100;\n};\nexport var sizesOnly = function sizesOnly(panelObject) {\n  return Object.values(panelObject).reduce(function (out, panel) {\n    out[panel.id] = panel.size;\n    return out;\n  }, {});\n};\n\nvar _getPanelMinSize = function _getPanelMinSize(panelMinSize, containerSize) {\n  var panelMinSizePercent = 0;\n  var panelMinSizeInt = parseInt(panelMinSize);\n\n  if (panelMinSize.indexOf('px') > -1) {\n    panelMinSizePercent = pxToPercent(panelMinSizeInt, containerSize);\n  } else if (panelMinSize.indexOf('%') > -1) {\n    panelMinSizePercent = pxToPercent(containerSize * (panelMinSizeInt / 100), containerSize);\n  }\n\n  return panelMinSizePercent;\n};\n\nexport var getPanelMinSize = function getPanelMinSize(panelMinSize, containerSize) {\n  var paddingMin = _getPanelMinSize(panelMinSize[1], containerSize);\n\n  var configMin = _getPanelMinSize(panelMinSize[0], containerSize);\n\n  return Math.max(configMin, paddingMin);\n};\nexport var getPosition = function getPosition(event, isHorizontal) {\n  var clientX = isMouseEvent(event) ? event.clientX : event.touches[0].clientX;\n  var clientY = isMouseEvent(event) ? event.clientY : event.touches[0].clientY;\n  return isHorizontal ? clientX : clientY;\n};\n\nvar getSiblingPanel = function getSiblingPanel(element, adjacency) {\n  if (!element) return null;\n  var method = adjacency === 'prev' ? 'previousElementSibling' : 'nextElementSibling';\n  var sibling = element[method];\n\n  while (sibling) {\n    if (sibling.matches('.euiResizablePanel:not(.euiResizablePanel-isCollapsed)')) {\n      return sibling;\n    }\n\n    sibling = sibling[method];\n  }\n}; // lazy initialization to prevent rerender on initial interaction\n\n\nvar init = function init(state) {\n  return state;\n};\n\nexport var useContainerCallbacks = function useContainerCallbacks(_ref) {\n  var initialState = _ref.initialState,\n      containerRef = _ref.containerRef,\n      onPanelWidthChange = _ref.onPanelWidthChange;\n\n  function reducer(state, action) {\n    var getContainerSize = function getContainerSize(isHorizontal) {\n      return isHorizontal ? containerRef.current.getBoundingClientRect().width : containerRef.current.getBoundingClientRect().height;\n    };\n\n    var runSideEffect = function runSideEffect(panels) {\n      if (onPanelWidthChange) {\n        onPanelWidthChange(sizesOnly(panels));\n      }\n    };\n\n    var withSideEffect = function withSideEffect(newState) {\n      runSideEffect(newState.panels);\n      return newState;\n    };\n\n    switch (action.type) {\n      case 'EUI_RESIZABLE_CONTAINER_INIT':\n        {\n          var isHorizontal = action.payload.isHorizontal;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isHorizontal: isHorizontal,\n            containerSize: getContainerSize(isHorizontal)\n          });\n        }\n\n      case 'EUI_RESIZABLE_PANEL_REGISTER':\n        {\n          var panel = action.payload.panel;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            panels: _objectSpread(_objectSpread({}, state.panels), {}, _defineProperty({}, panel.id, panel))\n          });\n        }\n\n      case 'EUI_RESIZABLE_PANEL_DEREGISTER':\n        {\n          var panelId = action.payload.panelId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            panels: Object.values(state.panels).reduce(function (out, panel) {\n              if (panel.id !== panelId) {\n                out[panel.id] = panel;\n              }\n\n              return out;\n            }, {})\n          });\n        }\n\n      case 'EUI_RESIZABLE_BUTTON_REGISTER':\n        {\n          var resizer = action.payload.resizer;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: _objectSpread(_objectSpread({}, state.resizers), {}, _defineProperty({}, resizer.id, resizer))\n          });\n        }\n\n      case 'EUI_RESIZABLE_BUTTON_DEREGISTER':\n        {\n          var resizerId = action.payload.resizerId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: Object.values(state.resizers).reduce(function (out, panel) {\n              if (panel.id !== resizerId) {\n                out[panel.id] = panel;\n              }\n\n              return out;\n            }, {})\n          });\n        }\n\n      case 'EUI_RESIZABLE_DRAG_START':\n        {\n          var _action$payload = action.payload,\n              position = _action$payload.position,\n              prevPanelId = _action$payload.prevPanelId,\n              nextPanelId = _action$payload.nextPanelId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isDragging: true,\n            currentResizerPos: position,\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId\n          });\n        }\n\n      case 'EUI_RESIZABLE_DRAG_MOVE':\n        {\n          if (!state.isDragging) {\n            return state;\n          }\n\n          var _action$payload2 = action.payload,\n              _position = _action$payload2.position,\n              _prevPanelId = _action$payload2.prevPanelId,\n              _nextPanelId = _action$payload2.nextPanelId;\n          var prevPanel = state.panels[_prevPanelId];\n          var nextPanel = state.panels[_nextPanelId];\n          var delta = _position - state.currentResizerPos;\n          var prevPanelMin = getPanelMinSize(prevPanel.minSize, state.containerSize);\n          var nextPanelMin = getPanelMinSize(nextPanel.minSize, state.containerSize);\n          var prevPanelSize = pxToPercent(prevPanel.getSizePx() + delta, state.containerSize);\n          var nextPanelSize = pxToPercent(nextPanel.getSizePx() - delta, state.containerSize);\n\n          if (prevPanelSize >= prevPanelMin && nextPanelSize >= nextPanelMin) {\n            var _objectSpread4;\n\n            return withSideEffect(_objectSpread(_objectSpread({}, state), {}, {\n              currentResizerPos: _position,\n              panels: _objectSpread(_objectSpread({}, state.panels), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, _prevPanelId, _objectSpread(_objectSpread({}, state.panels[_prevPanelId]), {}, {\n                size: prevPanelSize\n              })), _defineProperty(_objectSpread4, _nextPanelId, _objectSpread(_objectSpread({}, state.panels[_nextPanelId]), {}, {\n                size: nextPanelSize\n              })), _objectSpread4))\n            }));\n          }\n\n          return state;\n        }\n\n      case 'EUI_RESIZABLE_KEY_MOVE':\n        {\n          var _action$payload3 = action.payload,\n              _prevPanelId2 = _action$payload3.prevPanelId,\n              _nextPanelId2 = _action$payload3.nextPanelId,\n              direction = _action$payload3.direction;\n          var _prevPanel = state.panels[_prevPanelId2];\n          var _nextPanel = state.panels[_nextPanelId2];\n\n          var _prevPanelMin = getPanelMinSize(_prevPanel.minSize, state.containerSize);\n\n          var _nextPanelMin = getPanelMinSize(_nextPanel.minSize, state.containerSize);\n\n          var _prevPanelSize = pxToPercent(_prevPanel.getSizePx() - (direction === 'backward' ? 10 : -10), state.containerSize);\n\n          var _nextPanelSize = pxToPercent(_nextPanel.getSizePx() - (direction === 'forward' ? 10 : -10), state.containerSize);\n\n          if (_prevPanelSize >= _prevPanelMin && _nextPanelSize >= _nextPanelMin) {\n            var _objectSpread5;\n\n            return withSideEffect(_objectSpread(_objectSpread({}, state), {}, {\n              isDragging: false,\n              panels: _objectSpread(_objectSpread({}, state.panels), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, _prevPanelId2, _objectSpread(_objectSpread({}, state.panels[_prevPanelId2]), {}, {\n                size: _prevPanelSize\n              })), _defineProperty(_objectSpread5, _nextPanelId2, _objectSpread(_objectSpread({}, state.panels[_nextPanelId2]), {}, {\n                size: _nextPanelSize\n              })), _objectSpread5))\n            }));\n          }\n\n          return state;\n        }\n\n      case 'EUI_RESIZABLE_TOGGLE':\n        {\n          var _action$payload4 = action.payload,\n              options = _action$payload4.options,\n              currentPanelId = _action$payload4.panelId;\n          var currentPanel = state.panels[currentPanelId];\n          var shouldCollapse = !currentPanel.isCollapsed;\n          var panelElement = document.getElementById(currentPanelId);\n          var prevResizer = panelElement.previousElementSibling;\n\n          var _prevPanel2 = prevResizer ? prevResizer.previousElementSibling : null;\n\n          var nextResizer = panelElement.nextElementSibling;\n\n          var _nextPanel2 = nextResizer ? nextResizer.nextElementSibling : null;\n\n          var resizersToDisable = {};\n\n          if (prevResizer && _prevPanel2) {\n            resizersToDisable[prevResizer.id] = state.panels[_prevPanel2.id].isCollapsed ? true : shouldCollapse;\n          }\n\n          if (nextResizer && _nextPanel2) {\n            resizersToDisable[nextResizer.id] = state.panels[_nextPanel2.id].isCollapsed ? true : shouldCollapse;\n          }\n\n          var otherPanels = {};\n\n          if (_prevPanel2 && !state.panels[_prevPanel2.id].isCollapsed && options.direction === 'right') {\n            otherPanels[_prevPanel2.id] = state.panels[_prevPanel2.id];\n          }\n\n          if (_nextPanel2 && !state.panels[_nextPanel2.id].isCollapsed && options.direction === 'left') {\n            otherPanels[_nextPanel2.id] = state.panels[_nextPanel2.id];\n          }\n\n          var siblings = Object.keys(otherPanels).length; // A toggling sequence has occurred where an immediate sibling panel\n          // has not been found. We need to move more broadly through the DOM\n          // to find the next most suitable panel or space affordance.\n          // Can only occur when multiple immediate sibling panels are collapsed.\n\n          if (!siblings) {\n            var maybePrevPanel = getSiblingPanel(panelElement, 'prev');\n            var maybeNextPanel = getSiblingPanel(panelElement, 'next');\n            var validPrevPanel = maybePrevPanel ? state.panels[maybePrevPanel.id] : null;\n            var validNextPanel = maybeNextPanel ? state.panels[maybeNextPanel.id] : null; // Intentional, preferential redistribution order\n\n            if (validPrevPanel && options.direction === 'right') {\n              otherPanels[validPrevPanel.id] = validPrevPanel;\n            } else if (validNextPanel && options.direction === 'left') {\n              otherPanels[validNextPanel.id] = validNextPanel;\n            } else {\n              if (validPrevPanel) otherPanels[validPrevPanel.id] = validPrevPanel;\n              if (validNextPanel) otherPanels[validNextPanel.id] = validNextPanel;\n            }\n\n            siblings = Object.keys(otherPanels).length;\n          }\n\n          var newPanelSize = shouldCollapse ? pxToPercent(!currentPanel.mode ? 0 : 24, // size of the default toggle button\n          state.containerSize) : currentPanel.prevSize;\n\n          var _delta = shouldCollapse ? (currentPanel.size - newPanelSize) / siblings : (newPanelSize - currentPanel.size) / siblings * -1;\n\n          var collapsedPanelsSize = Object.values(state.panels).reduce(function (sum, panel) {\n            if (panel.id !== currentPanelId && panel.isCollapsed) {\n              sum += panel.size;\n            }\n\n            return sum;\n          }, 0); // A toggling sequence has occurred where a to-be-opened panel will\n          // become the only open panel. Rather than reopen to its previous\n          // size, give it the full width, less size occupied by collapsed panels.\n          // Can only occur with external toggling.\n\n          if (!shouldCollapse && !siblings) {\n            newPanelSize = 100 - collapsedPanelsSize;\n          }\n\n          var updatedPanels = {};\n\n          if (_delta < 0 && Object.values(otherPanels).some(function (panel) {\n            return panel.size + _delta < getPanelMinSize(panel.minSize, state.containerSize);\n          })) {\n            // A toggling sequence has occurred where a to-be-opened panel is\n            // requesting more space than its logical sibling panel can afford.\n            // Rather than choose another single panel to sacrifice space,\n            // or try to pull proportionally from all availble panels\n            // (neither of which is guaranteed to prevent negative resulting widths),\n            // or attempt something even more complex,\n            // we redistribute _all_ space evenly to non-collapsed panels\n            // as something of a reset.\n            // This situation can only occur when (n-1) panels are collapsed at once\n            // and the most recently collapsed panel gains significant width\n            // during the previously occurring collapse.\n            // That is (largely), external toggling where the default logic has\n            // been negated by the lack of panel mode distinction.\n            otherPanels = Object.values(state.panels).reduce(function (out, panel) {\n              if (panel.id !== currentPanelId && !panel.isCollapsed) {\n                out[panel.id] = _objectSpread({}, panel);\n              }\n\n              return out;\n            }, {});\n            newPanelSize = (100 - collapsedPanelsSize) / (Object.keys(otherPanels).length + 1);\n            updatedPanels = Object.values(otherPanels).reduce(function (out, panel) {\n              out[panel.id] = _objectSpread(_objectSpread({}, panel), {}, {\n                size: newPanelSize\n              });\n              return out;\n            }, {});\n          } else {\n            // A toggling sequence has occurred that is standard and predictable\n            updatedPanels = Object.values(otherPanels).reduce(function (out, panel) {\n              out[panel.id] = _objectSpread(_objectSpread({}, panel), {}, {\n                size: panel.size + _delta\n              });\n              return out;\n            }, {});\n          }\n\n          return withSideEffect(_objectSpread(_objectSpread({}, state), {}, {\n            panels: _objectSpread(_objectSpread(_objectSpread({}, state.panels), updatedPanels), {}, _defineProperty({}, currentPanelId, _objectSpread(_objectSpread({}, state.panels[currentPanelId]), {}, {\n              size: newPanelSize,\n              isCollapsed: shouldCollapse,\n              prevSize: shouldCollapse ? currentPanel.size : newPanelSize\n            }))),\n            resizers: Object.values(state.resizers).reduce(function (out, resizer) {\n              var _resizersToDisable$re;\n\n              out[resizer.id] = _objectSpread(_objectSpread({}, resizer), {}, {\n                isFocused: false,\n                isDisabled: (_resizersToDisable$re = resizersToDisable[resizer.id]) !== null && _resizersToDisable$re !== void 0 ? _resizersToDisable$re : resizer.isDisabled\n              });\n              return out;\n            }, {})\n          }));\n        }\n\n      case 'EUI_RESIZABLE_BUTTON_FOCUS':\n        {\n          var _resizerId = action.payload.resizerId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: Object.values(state.resizers).reduce(function (out, resizer) {\n              out[resizer.id] = _objectSpread(_objectSpread({}, resizer), {}, {\n                isFocused: resizer.id === _resizerId\n              });\n              return out;\n            }, {})\n          });\n        }\n\n      case 'EUI_RESIZABLE_BUTTON_BLUR':\n        {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: Object.values(state.resizers).reduce(function (out, resizer) {\n              out[resizer.id] = _objectSpread(_objectSpread({}, resizer), {}, {\n                isFocused: false\n              });\n              return out;\n            }, {})\n          });\n        }\n\n      case 'EUI_RESIZABLE_RESET':\n        {\n          return _objectSpread(_objectSpread({}, initialState), {}, {\n            panels: state.panels,\n            resizers: state.resizers,\n            containerSize: state.containerSize\n          });\n        }\n\n      case 'EUI_RESIZABLE_ONCHANGE':\n        {\n          onPanelWidthChange(sizesOnly(state.panels));\n          return state;\n        }\n      // TODO: Implement more generic version of\n      // 'EUI_RESIZABLE_DRAG_MOVE' to expose to consumers\n\n      case 'EUI_RESIZABLE_RESIZE':\n        {\n          return state;\n        }\n\n      default:\n        assertNever(action);\n        return state;\n    }\n  }\n\n  var _useReducer = useReducer(reducer, initialState, init),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      reducerState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var actions = useMemo(function () {\n    return {\n      reset: function reset() {\n        return dispatch({\n          type: 'EUI_RESIZABLE_RESET'\n        });\n      },\n      initContainer: function initContainer(isHorizontal) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_CONTAINER_INIT',\n          payload: {\n            isHorizontal: isHorizontal\n          }\n        });\n      },\n      registerPanel: function registerPanel(panel) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_PANEL_REGISTER',\n          payload: {\n            panel: panel\n          }\n        });\n      },\n      deregisterPanel: function deregisterPanel(panelId) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_PANEL_DEREGISTER',\n          payload: {\n            panelId: panelId\n          }\n        });\n      },\n      registerResizer: function registerResizer(resizer) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_REGISTER',\n          payload: {\n            resizer: resizer\n          }\n        });\n      },\n      deregisterResizer: function deregisterResizer(resizerId) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_DEREGISTER',\n          payload: {\n            resizerId: resizerId\n          }\n        });\n      },\n      dragStart: function dragStart(_ref2) {\n        var prevPanelId = _ref2.prevPanelId,\n            nextPanelId = _ref2.nextPanelId,\n            position = _ref2.position;\n        return dispatch({\n          type: 'EUI_RESIZABLE_DRAG_START',\n          payload: {\n            position: position,\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId\n          }\n        });\n      },\n      dragMove: function dragMove(_ref3) {\n        var prevPanelId = _ref3.prevPanelId,\n            nextPanelId = _ref3.nextPanelId,\n            position = _ref3.position;\n        return dispatch({\n          type: 'EUI_RESIZABLE_DRAG_MOVE',\n          payload: {\n            position: position,\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId\n          }\n        });\n      },\n      keyMove: function keyMove(_ref4) {\n        var prevPanelId = _ref4.prevPanelId,\n            nextPanelId = _ref4.nextPanelId,\n            direction = _ref4.direction;\n        return dispatch({\n          type: 'EUI_RESIZABLE_KEY_MOVE',\n          payload: {\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId,\n            direction: direction\n          }\n        });\n      },\n      togglePanel: function togglePanel(panelId, options) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_TOGGLE',\n          payload: {\n            panelId: panelId,\n            options: options\n          }\n        });\n      },\n      resizerFocus: function resizerFocus(resizerId) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_FOCUS',\n          payload: {\n            resizerId: resizerId\n          }\n        });\n      },\n      resizerBlur: function resizerBlur() {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_BLUR'\n        });\n      }\n    };\n  }, []);\n  return [actions, reducerState];\n};","map":{"version":3,"sources":["/Users/inwoo/Projects/coldcallproject/coldcallproject/node_modules/@elastic/eui/es/components/resizable_container/helpers.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","isArray","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","configurable","writable","_typeof","useMemo","useReducer","assertNever","isMouseEvent","event","pxToPercent","proportion","whole","sizesOnly","panelObject","values","reduce","out","panel","id","size","_getPanelMinSize","panelMinSize","containerSize","panelMinSizePercent","panelMinSizeInt","parseInt","indexOf","getPanelMinSize","paddingMin","configMin","Math","max","getPosition","isHorizontal","clientX","touches","clientY","getSiblingPanel","element","adjacency","method","sibling","matches","init","state","useContainerCallbacks","_ref","initialState","containerRef","onPanelWidthChange","reducer","action","getContainerSize","current","getBoundingClientRect","width","height","runSideEffect","panels","withSideEffect","newState","type","payload","panelId","resizer","resizers","resizerId","_action$payload","position","prevPanelId","nextPanelId","isDragging","currentResizerPos","_action$payload2","_position","_prevPanelId","_nextPanelId","prevPanel","nextPanel","delta","prevPanelMin","minSize","nextPanelMin","prevPanelSize","getSizePx","nextPanelSize","_objectSpread4","_action$payload3","_prevPanelId2","_nextPanelId2","direction","_prevPanel","_nextPanel","_prevPanelMin","_nextPanelMin","_prevPanelSize","_nextPanelSize","_objectSpread5","_action$payload4","options","currentPanelId","currentPanel","shouldCollapse","isCollapsed","panelElement","document","getElementById","prevResizer","previousElementSibling","_prevPanel2","nextResizer","nextElementSibling","_nextPanel2","resizersToDisable","otherPanels","siblings","maybePrevPanel","maybeNextPanel","validPrevPanel","validNextPanel","newPanelSize","mode","prevSize","_delta","collapsedPanelsSize","sum","updatedPanels","some","_resizersToDisable$re","isFocused","isDisabled","_resizerId","_useReducer","_useReducer2","reducerState","dispatch","actions","reset","initContainer","registerPanel","deregisterPanel","registerResizer","deregisterResizer","dragStart","_ref2","dragMove","_ref3","keyMove","_ref4","togglePanel","resizerFocus","resizerBlur"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, useReducer } from 'react';\nimport { assertNever } from '../common';\n\nfunction isMouseEvent(event) {\n  return _typeof(event) === 'object' && 'pageX' in event && 'pageY' in event;\n}\n\nexport var pxToPercent = function pxToPercent(proportion, whole) {\n  if (whole < 1 || proportion < 0) return 0;\n  return proportion / whole * 100;\n};\nexport var sizesOnly = function sizesOnly(panelObject) {\n  return Object.values(panelObject).reduce(function (out, panel) {\n    out[panel.id] = panel.size;\n    return out;\n  }, {});\n};\n\nvar _getPanelMinSize = function _getPanelMinSize(panelMinSize, containerSize) {\n  var panelMinSizePercent = 0;\n  var panelMinSizeInt = parseInt(panelMinSize);\n\n  if (panelMinSize.indexOf('px') > -1) {\n    panelMinSizePercent = pxToPercent(panelMinSizeInt, containerSize);\n  } else if (panelMinSize.indexOf('%') > -1) {\n    panelMinSizePercent = pxToPercent(containerSize * (panelMinSizeInt / 100), containerSize);\n  }\n\n  return panelMinSizePercent;\n};\n\nexport var getPanelMinSize = function getPanelMinSize(panelMinSize, containerSize) {\n  var paddingMin = _getPanelMinSize(panelMinSize[1], containerSize);\n\n  var configMin = _getPanelMinSize(panelMinSize[0], containerSize);\n\n  return Math.max(configMin, paddingMin);\n};\nexport var getPosition = function getPosition(event, isHorizontal) {\n  var clientX = isMouseEvent(event) ? event.clientX : event.touches[0].clientX;\n  var clientY = isMouseEvent(event) ? event.clientY : event.touches[0].clientY;\n  return isHorizontal ? clientX : clientY;\n};\n\nvar getSiblingPanel = function getSiblingPanel(element, adjacency) {\n  if (!element) return null;\n  var method = adjacency === 'prev' ? 'previousElementSibling' : 'nextElementSibling';\n  var sibling = element[method];\n\n  while (sibling) {\n    if (sibling.matches('.euiResizablePanel:not(.euiResizablePanel-isCollapsed)')) {\n      return sibling;\n    }\n\n    sibling = sibling[method];\n  }\n}; // lazy initialization to prevent rerender on initial interaction\n\n\nvar init = function init(state) {\n  return state;\n};\n\nexport var useContainerCallbacks = function useContainerCallbacks(_ref) {\n  var initialState = _ref.initialState,\n      containerRef = _ref.containerRef,\n      onPanelWidthChange = _ref.onPanelWidthChange;\n\n  function reducer(state, action) {\n    var getContainerSize = function getContainerSize(isHorizontal) {\n      return isHorizontal ? containerRef.current.getBoundingClientRect().width : containerRef.current.getBoundingClientRect().height;\n    };\n\n    var runSideEffect = function runSideEffect(panels) {\n      if (onPanelWidthChange) {\n        onPanelWidthChange(sizesOnly(panels));\n      }\n    };\n\n    var withSideEffect = function withSideEffect(newState) {\n      runSideEffect(newState.panels);\n      return newState;\n    };\n\n    switch (action.type) {\n      case 'EUI_RESIZABLE_CONTAINER_INIT':\n        {\n          var isHorizontal = action.payload.isHorizontal;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isHorizontal: isHorizontal,\n            containerSize: getContainerSize(isHorizontal)\n          });\n        }\n\n      case 'EUI_RESIZABLE_PANEL_REGISTER':\n        {\n          var panel = action.payload.panel;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            panels: _objectSpread(_objectSpread({}, state.panels), {}, _defineProperty({}, panel.id, panel))\n          });\n        }\n\n      case 'EUI_RESIZABLE_PANEL_DEREGISTER':\n        {\n          var panelId = action.payload.panelId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            panels: Object.values(state.panels).reduce(function (out, panel) {\n              if (panel.id !== panelId) {\n                out[panel.id] = panel;\n              }\n\n              return out;\n            }, {})\n          });\n        }\n\n      case 'EUI_RESIZABLE_BUTTON_REGISTER':\n        {\n          var resizer = action.payload.resizer;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: _objectSpread(_objectSpread({}, state.resizers), {}, _defineProperty({}, resizer.id, resizer))\n          });\n        }\n\n      case 'EUI_RESIZABLE_BUTTON_DEREGISTER':\n        {\n          var resizerId = action.payload.resizerId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: Object.values(state.resizers).reduce(function (out, panel) {\n              if (panel.id !== resizerId) {\n                out[panel.id] = panel;\n              }\n\n              return out;\n            }, {})\n          });\n        }\n\n      case 'EUI_RESIZABLE_DRAG_START':\n        {\n          var _action$payload = action.payload,\n              position = _action$payload.position,\n              prevPanelId = _action$payload.prevPanelId,\n              nextPanelId = _action$payload.nextPanelId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isDragging: true,\n            currentResizerPos: position,\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId\n          });\n        }\n\n      case 'EUI_RESIZABLE_DRAG_MOVE':\n        {\n          if (!state.isDragging) {\n            return state;\n          }\n\n          var _action$payload2 = action.payload,\n              _position = _action$payload2.position,\n              _prevPanelId = _action$payload2.prevPanelId,\n              _nextPanelId = _action$payload2.nextPanelId;\n          var prevPanel = state.panels[_prevPanelId];\n          var nextPanel = state.panels[_nextPanelId];\n          var delta = _position - state.currentResizerPos;\n          var prevPanelMin = getPanelMinSize(prevPanel.minSize, state.containerSize);\n          var nextPanelMin = getPanelMinSize(nextPanel.minSize, state.containerSize);\n          var prevPanelSize = pxToPercent(prevPanel.getSizePx() + delta, state.containerSize);\n          var nextPanelSize = pxToPercent(nextPanel.getSizePx() - delta, state.containerSize);\n\n          if (prevPanelSize >= prevPanelMin && nextPanelSize >= nextPanelMin) {\n            var _objectSpread4;\n\n            return withSideEffect(_objectSpread(_objectSpread({}, state), {}, {\n              currentResizerPos: _position,\n              panels: _objectSpread(_objectSpread({}, state.panels), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, _prevPanelId, _objectSpread(_objectSpread({}, state.panels[_prevPanelId]), {}, {\n                size: prevPanelSize\n              })), _defineProperty(_objectSpread4, _nextPanelId, _objectSpread(_objectSpread({}, state.panels[_nextPanelId]), {}, {\n                size: nextPanelSize\n              })), _objectSpread4))\n            }));\n          }\n\n          return state;\n        }\n\n      case 'EUI_RESIZABLE_KEY_MOVE':\n        {\n          var _action$payload3 = action.payload,\n              _prevPanelId2 = _action$payload3.prevPanelId,\n              _nextPanelId2 = _action$payload3.nextPanelId,\n              direction = _action$payload3.direction;\n          var _prevPanel = state.panels[_prevPanelId2];\n          var _nextPanel = state.panels[_nextPanelId2];\n\n          var _prevPanelMin = getPanelMinSize(_prevPanel.minSize, state.containerSize);\n\n          var _nextPanelMin = getPanelMinSize(_nextPanel.minSize, state.containerSize);\n\n          var _prevPanelSize = pxToPercent(_prevPanel.getSizePx() - (direction === 'backward' ? 10 : -10), state.containerSize);\n\n          var _nextPanelSize = pxToPercent(_nextPanel.getSizePx() - (direction === 'forward' ? 10 : -10), state.containerSize);\n\n          if (_prevPanelSize >= _prevPanelMin && _nextPanelSize >= _nextPanelMin) {\n            var _objectSpread5;\n\n            return withSideEffect(_objectSpread(_objectSpread({}, state), {}, {\n              isDragging: false,\n              panels: _objectSpread(_objectSpread({}, state.panels), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, _prevPanelId2, _objectSpread(_objectSpread({}, state.panels[_prevPanelId2]), {}, {\n                size: _prevPanelSize\n              })), _defineProperty(_objectSpread5, _nextPanelId2, _objectSpread(_objectSpread({}, state.panels[_nextPanelId2]), {}, {\n                size: _nextPanelSize\n              })), _objectSpread5))\n            }));\n          }\n\n          return state;\n        }\n\n      case 'EUI_RESIZABLE_TOGGLE':\n        {\n          var _action$payload4 = action.payload,\n              options = _action$payload4.options,\n              currentPanelId = _action$payload4.panelId;\n          var currentPanel = state.panels[currentPanelId];\n          var shouldCollapse = !currentPanel.isCollapsed;\n          var panelElement = document.getElementById(currentPanelId);\n          var prevResizer = panelElement.previousElementSibling;\n\n          var _prevPanel2 = prevResizer ? prevResizer.previousElementSibling : null;\n\n          var nextResizer = panelElement.nextElementSibling;\n\n          var _nextPanel2 = nextResizer ? nextResizer.nextElementSibling : null;\n\n          var resizersToDisable = {};\n\n          if (prevResizer && _prevPanel2) {\n            resizersToDisable[prevResizer.id] = state.panels[_prevPanel2.id].isCollapsed ? true : shouldCollapse;\n          }\n\n          if (nextResizer && _nextPanel2) {\n            resizersToDisable[nextResizer.id] = state.panels[_nextPanel2.id].isCollapsed ? true : shouldCollapse;\n          }\n\n          var otherPanels = {};\n\n          if (_prevPanel2 && !state.panels[_prevPanel2.id].isCollapsed && options.direction === 'right') {\n            otherPanels[_prevPanel2.id] = state.panels[_prevPanel2.id];\n          }\n\n          if (_nextPanel2 && !state.panels[_nextPanel2.id].isCollapsed && options.direction === 'left') {\n            otherPanels[_nextPanel2.id] = state.panels[_nextPanel2.id];\n          }\n\n          var siblings = Object.keys(otherPanels).length; // A toggling sequence has occurred where an immediate sibling panel\n          // has not been found. We need to move more broadly through the DOM\n          // to find the next most suitable panel or space affordance.\n          // Can only occur when multiple immediate sibling panels are collapsed.\n\n          if (!siblings) {\n            var maybePrevPanel = getSiblingPanel(panelElement, 'prev');\n            var maybeNextPanel = getSiblingPanel(panelElement, 'next');\n            var validPrevPanel = maybePrevPanel ? state.panels[maybePrevPanel.id] : null;\n            var validNextPanel = maybeNextPanel ? state.panels[maybeNextPanel.id] : null; // Intentional, preferential redistribution order\n\n            if (validPrevPanel && options.direction === 'right') {\n              otherPanels[validPrevPanel.id] = validPrevPanel;\n            } else if (validNextPanel && options.direction === 'left') {\n              otherPanels[validNextPanel.id] = validNextPanel;\n            } else {\n              if (validPrevPanel) otherPanels[validPrevPanel.id] = validPrevPanel;\n              if (validNextPanel) otherPanels[validNextPanel.id] = validNextPanel;\n            }\n\n            siblings = Object.keys(otherPanels).length;\n          }\n\n          var newPanelSize = shouldCollapse ? pxToPercent(!currentPanel.mode ? 0 : 24, // size of the default toggle button\n          state.containerSize) : currentPanel.prevSize;\n\n          var _delta = shouldCollapse ? (currentPanel.size - newPanelSize) / siblings : (newPanelSize - currentPanel.size) / siblings * -1;\n\n          var collapsedPanelsSize = Object.values(state.panels).reduce(function (sum, panel) {\n            if (panel.id !== currentPanelId && panel.isCollapsed) {\n              sum += panel.size;\n            }\n\n            return sum;\n          }, 0); // A toggling sequence has occurred where a to-be-opened panel will\n          // become the only open panel. Rather than reopen to its previous\n          // size, give it the full width, less size occupied by collapsed panels.\n          // Can only occur with external toggling.\n\n          if (!shouldCollapse && !siblings) {\n            newPanelSize = 100 - collapsedPanelsSize;\n          }\n\n          var updatedPanels = {};\n\n          if (_delta < 0 && Object.values(otherPanels).some(function (panel) {\n            return panel.size + _delta < getPanelMinSize(panel.minSize, state.containerSize);\n          })) {\n            // A toggling sequence has occurred where a to-be-opened panel is\n            // requesting more space than its logical sibling panel can afford.\n            // Rather than choose another single panel to sacrifice space,\n            // or try to pull proportionally from all availble panels\n            // (neither of which is guaranteed to prevent negative resulting widths),\n            // or attempt something even more complex,\n            // we redistribute _all_ space evenly to non-collapsed panels\n            // as something of a reset.\n            // This situation can only occur when (n-1) panels are collapsed at once\n            // and the most recently collapsed panel gains significant width\n            // during the previously occurring collapse.\n            // That is (largely), external toggling where the default logic has\n            // been negated by the lack of panel mode distinction.\n            otherPanels = Object.values(state.panels).reduce(function (out, panel) {\n              if (panel.id !== currentPanelId && !panel.isCollapsed) {\n                out[panel.id] = _objectSpread({}, panel);\n              }\n\n              return out;\n            }, {});\n            newPanelSize = (100 - collapsedPanelsSize) / (Object.keys(otherPanels).length + 1);\n            updatedPanels = Object.values(otherPanels).reduce(function (out, panel) {\n              out[panel.id] = _objectSpread(_objectSpread({}, panel), {}, {\n                size: newPanelSize\n              });\n              return out;\n            }, {});\n          } else {\n            // A toggling sequence has occurred that is standard and predictable\n            updatedPanels = Object.values(otherPanels).reduce(function (out, panel) {\n              out[panel.id] = _objectSpread(_objectSpread({}, panel), {}, {\n                size: panel.size + _delta\n              });\n              return out;\n            }, {});\n          }\n\n          return withSideEffect(_objectSpread(_objectSpread({}, state), {}, {\n            panels: _objectSpread(_objectSpread(_objectSpread({}, state.panels), updatedPanels), {}, _defineProperty({}, currentPanelId, _objectSpread(_objectSpread({}, state.panels[currentPanelId]), {}, {\n              size: newPanelSize,\n              isCollapsed: shouldCollapse,\n              prevSize: shouldCollapse ? currentPanel.size : newPanelSize\n            }))),\n            resizers: Object.values(state.resizers).reduce(function (out, resizer) {\n              var _resizersToDisable$re;\n\n              out[resizer.id] = _objectSpread(_objectSpread({}, resizer), {}, {\n                isFocused: false,\n                isDisabled: (_resizersToDisable$re = resizersToDisable[resizer.id]) !== null && _resizersToDisable$re !== void 0 ? _resizersToDisable$re : resizer.isDisabled\n              });\n              return out;\n            }, {})\n          }));\n        }\n\n      case 'EUI_RESIZABLE_BUTTON_FOCUS':\n        {\n          var _resizerId = action.payload.resizerId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: Object.values(state.resizers).reduce(function (out, resizer) {\n              out[resizer.id] = _objectSpread(_objectSpread({}, resizer), {}, {\n                isFocused: resizer.id === _resizerId\n              });\n              return out;\n            }, {})\n          });\n        }\n\n      case 'EUI_RESIZABLE_BUTTON_BLUR':\n        {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: Object.values(state.resizers).reduce(function (out, resizer) {\n              out[resizer.id] = _objectSpread(_objectSpread({}, resizer), {}, {\n                isFocused: false\n              });\n              return out;\n            }, {})\n          });\n        }\n\n      case 'EUI_RESIZABLE_RESET':\n        {\n          return _objectSpread(_objectSpread({}, initialState), {}, {\n            panels: state.panels,\n            resizers: state.resizers,\n            containerSize: state.containerSize\n          });\n        }\n\n      case 'EUI_RESIZABLE_ONCHANGE':\n        {\n          onPanelWidthChange(sizesOnly(state.panels));\n          return state;\n        }\n      // TODO: Implement more generic version of\n      // 'EUI_RESIZABLE_DRAG_MOVE' to expose to consumers\n\n      case 'EUI_RESIZABLE_RESIZE':\n        {\n          return state;\n        }\n\n      default:\n        assertNever(action);\n        return state;\n    }\n  }\n\n  var _useReducer = useReducer(reducer, initialState, init),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      reducerState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var actions = useMemo(function () {\n    return {\n      reset: function reset() {\n        return dispatch({\n          type: 'EUI_RESIZABLE_RESET'\n        });\n      },\n      initContainer: function initContainer(isHorizontal) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_CONTAINER_INIT',\n          payload: {\n            isHorizontal: isHorizontal\n          }\n        });\n      },\n      registerPanel: function registerPanel(panel) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_PANEL_REGISTER',\n          payload: {\n            panel: panel\n          }\n        });\n      },\n      deregisterPanel: function deregisterPanel(panelId) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_PANEL_DEREGISTER',\n          payload: {\n            panelId: panelId\n          }\n        });\n      },\n      registerResizer: function registerResizer(resizer) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_REGISTER',\n          payload: {\n            resizer: resizer\n          }\n        });\n      },\n      deregisterResizer: function deregisterResizer(resizerId) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_DEREGISTER',\n          payload: {\n            resizerId: resizerId\n          }\n        });\n      },\n      dragStart: function dragStart(_ref2) {\n        var prevPanelId = _ref2.prevPanelId,\n            nextPanelId = _ref2.nextPanelId,\n            position = _ref2.position;\n        return dispatch({\n          type: 'EUI_RESIZABLE_DRAG_START',\n          payload: {\n            position: position,\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId\n          }\n        });\n      },\n      dragMove: function dragMove(_ref3) {\n        var prevPanelId = _ref3.prevPanelId,\n            nextPanelId = _ref3.nextPanelId,\n            position = _ref3.position;\n        return dispatch({\n          type: 'EUI_RESIZABLE_DRAG_MOVE',\n          payload: {\n            position: position,\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId\n          }\n        });\n      },\n      keyMove: function keyMove(_ref4) {\n        var prevPanelId = _ref4.prevPanelId,\n            nextPanelId = _ref4.nextPanelId,\n            direction = _ref4.direction;\n        return dispatch({\n          type: 'EUI_RESIZABLE_KEY_MOVE',\n          payload: {\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId,\n            direction: direction\n          }\n        });\n      },\n      togglePanel: function togglePanel(panelId, options) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_TOGGLE',\n          payload: {\n            panelId: panelId,\n            options: options\n          }\n        });\n      },\n      resizerFocus: function resizerFocus(resizerId) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_FOCUS',\n          payload: {\n            resizerId: resizerId\n          }\n        });\n      },\n      resizerBlur: function resizerBlur() {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_BLUR'\n        });\n      }\n    };\n  }, []);\n  return [actions, reducerState];\n};"]},"metadata":{},"sourceType":"module"}