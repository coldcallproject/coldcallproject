{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { keysOf } from '../common';\nimport classNames from 'classnames';\nvar typeToClassNameMap = {\n  regular: 'euiCommentEvent--regular',\n  update: 'euiCommentEvent--update'\n};\nexport var TYPES = keysOf(typeToClassNameMap);\nexport var EuiCommentEvent = function EuiCommentEvent(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      username = _ref.username,\n      timestamp = _ref.timestamp,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'regular' : _ref$type,\n      event = _ref.event,\n      actions = _ref.actions;\n  var classes = classNames('euiCommentEvent', typeToClassNameMap[type], className);\n  var isFigure = type === 'regular' || type === 'update' && typeof children !== 'undefined';\n  var Element = isFigure ? 'figure' : 'div';\n  var HeaderElement = isFigure ? 'figcaption' : 'div';\n  return /*#__PURE__*/React.createElement(Element, {\n    className: classes\n  }, /*#__PURE__*/React.createElement(HeaderElement, {\n    className: \"euiCommentEvent__header\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiCommentEvent__headerData\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiCommentEvent__headerUsername\"\n  }, username), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiCommentEvent__headerEvent\"\n  }, event), timestamp ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiCommentEvent__headerTimestamp\"\n  }, /*#__PURE__*/React.createElement(\"time\", null, timestamp)) : undefined), actions ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiCommentEvent__headerActions\"\n  }, actions) : undefined), children ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiCommentEvent__body\"\n  }, children) : undefined);\n};\nEuiCommentEvent.propTypes = {\n  /**\n     * Author of the comment. Display a small icon or avatar with it if needed.\n     */\n  username: PropTypes.node.isRequired,\n\n  /**\n     * Time of occurrence of the event. Its format is set on the consumer's side\n     */\n  timestamp: PropTypes.node,\n\n  /**\n     * Describes the event that took place\n     */\n  event: PropTypes.node,\n\n  /**\n     * Custom actions that the user can perform from the comment's header\n     */\n  actions: PropTypes.node,\n\n  /**\n     * Use \"update\" when the comment is primarily showing info about actions that the user or the system has performed (e.g. \"user1 edited a case\").\n     */\n  type: PropTypes.oneOf([\"regular\", \"update\"]),\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string\n};","map":{"version":3,"sources":["/Users/inwoo/Projects/coldcallproject/coldcallproject/node_modules/@elastic/eui/es/components/comment_list/comment_event.js"],"names":["React","PropTypes","keysOf","classNames","typeToClassNameMap","regular","update","TYPES","EuiCommentEvent","_ref","children","className","username","timestamp","_ref$type","type","event","actions","classes","isFigure","Element","HeaderElement","createElement","undefined","propTypes","node","isRequired","oneOf","string"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { keysOf } from '../common';\nimport classNames from 'classnames';\nvar typeToClassNameMap = {\n  regular: 'euiCommentEvent--regular',\n  update: 'euiCommentEvent--update'\n};\nexport var TYPES = keysOf(typeToClassNameMap);\nexport var EuiCommentEvent = function EuiCommentEvent(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      username = _ref.username,\n      timestamp = _ref.timestamp,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'regular' : _ref$type,\n      event = _ref.event,\n      actions = _ref.actions;\n  var classes = classNames('euiCommentEvent', typeToClassNameMap[type], className);\n  var isFigure = type === 'regular' || type === 'update' && typeof children !== 'undefined';\n  var Element = isFigure ? 'figure' : 'div';\n  var HeaderElement = isFigure ? 'figcaption' : 'div';\n  return /*#__PURE__*/React.createElement(Element, {\n    className: classes\n  }, /*#__PURE__*/React.createElement(HeaderElement, {\n    className: \"euiCommentEvent__header\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiCommentEvent__headerData\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiCommentEvent__headerUsername\"\n  }, username), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiCommentEvent__headerEvent\"\n  }, event), timestamp ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiCommentEvent__headerTimestamp\"\n  }, /*#__PURE__*/React.createElement(\"time\", null, timestamp)) : undefined), actions ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiCommentEvent__headerActions\"\n  }, actions) : undefined), children ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiCommentEvent__body\"\n  }, children) : undefined);\n};\nEuiCommentEvent.propTypes = {\n  /**\n     * Author of the comment. Display a small icon or avatar with it if needed.\n     */\n  username: PropTypes.node.isRequired,\n\n  /**\n     * Time of occurrence of the event. Its format is set on the consumer's side\n     */\n  timestamp: PropTypes.node,\n\n  /**\n     * Describes the event that took place\n     */\n  event: PropTypes.node,\n\n  /**\n     * Custom actions that the user can perform from the comment's header\n     */\n  actions: PropTypes.node,\n\n  /**\n     * Use \"update\" when the comment is primarily showing info about actions that the user or the system has performed (e.g. \"user1 edited a case\").\n     */\n  type: PropTypes.oneOf([\"regular\", \"update\"]),\n  className: PropTypes.string,\n  \"aria-label\": PropTypes.string,\n  \"data-test-subj\": PropTypes.string\n};"]},"metadata":{},"sourceType":"module"}