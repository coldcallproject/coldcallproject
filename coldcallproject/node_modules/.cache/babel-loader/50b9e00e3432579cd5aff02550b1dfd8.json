{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport { printIso8601 } from './date_format';\nimport { isDateValue, dateValue } from './date_value';\nimport { AST } from './ast';\nimport { isArray, isDateLike, isString } from '../../../services/predicate';\nimport { keysOf } from '../../common';\n\nvar processDateOperation = function processDateOperation(value, operator) {\n  var granularity = value.granularity,\n      resolve = value.resolve;\n  var expression = printIso8601(resolve());\n\n  if (!granularity) {\n    return {\n      operator: operator,\n      expression: expression\n    };\n  }\n\n  switch (operator) {\n    case AST.Operator.GT:\n      expression = \"\".concat(expression, \"||+1\").concat(granularity.es, \"/\").concat(granularity.es);\n      return {\n        operator: AST.Operator.GTE,\n        expression: expression\n      };\n\n    case AST.Operator.GTE:\n      expression = \"\".concat(expression, \"||/\").concat(granularity.es);\n      return {\n        operator: operator,\n        expression: expression\n      };\n\n    case AST.Operator.LT:\n      expression = \"\".concat(expression, \"||/\").concat(granularity.es);\n      return {\n        operator: operator,\n        expression: expression\n      };\n\n    case AST.Operator.LTE:\n      expression = \"\".concat(expression, \"||+1\").concat(granularity.es, \"/\").concat(granularity.es);\n      return {\n        operator: AST.Operator.LT,\n        expression: expression\n      };\n\n    default:\n      expression = \"\".concat(expression, \"||/\").concat(granularity.es);\n      return {\n        expression: expression\n      };\n  }\n};\n\nexport var _termValuesToQuery = function _termValuesToQuery(values, options) {\n  var body = {\n    query: values.join(' ')\n  };\n\n  if (body.query === '') {\n    return;\n  }\n\n  if (options.defaultFields) {\n    body.fields = options.defaultFields;\n  }\n\n  return {\n    simple_query_string: body\n  };\n};\nexport var _fieldValuesToQuery = function _fieldValuesToQuery(field, operations, andOr) {\n  var queries = [];\n  keysOf(operations).forEach(function (operator) {\n    var values = operations[operator];\n\n    switch (operator) {\n      case AST.Operator.EQ:\n        var _terms = [];\n        var phrases = [];\n        var dates = [];\n        values.forEach(function (value) {\n          if (isDateValue(value)) {\n            dates.push(value);\n          } else if (isDateLike(value)) {\n            dates.push(dateValue(value));\n          } else if (isString(value) && value.match(/\\s/)) {\n            phrases.push(value);\n          } else {\n            _terms.push(value);\n          }\n        });\n\n        if (_terms.length > 0) {\n          queries.push({\n            match: _defineProperty({}, field, {\n              query: _terms.join(' '),\n              operator: andOr\n            })\n          });\n        }\n\n        if (phrases.length > 0) {\n          queries.push.apply(queries, _toConsumableArray(phrases.map(function (phrase) {\n            return {\n              match_phrase: _defineProperty({}, field, phrase)\n            };\n          })));\n        }\n\n        if (dates.length > 0) {\n          queries.push.apply(queries, _toConsumableArray(dates.map(function (value) {\n            return {\n              match: _defineProperty({}, field, processDateOperation(value).expression)\n            };\n          })));\n        }\n\n        break;\n\n      default:\n        values.forEach(function (value) {\n          if (isDateValue(value)) {\n            var operation = processDateOperation(value, operator);\n            queries.push({\n              range: _defineProperty({}, field, _defineProperty({}, operation.operator, operation.expression))\n            });\n          } else {\n            queries.push({\n              range: _defineProperty({}, field, _defineProperty({}, operator, value))\n            });\n          }\n        });\n    }\n  });\n\n  if (queries.length === 1) {\n    return queries[0];\n  }\n\n  var key = andOr === 'and' ? 'must' : 'should';\n  return {\n    bool: _defineProperty({}, key, [].concat(queries))\n  };\n};\nexport var _isFlagToQuery = function _isFlagToQuery(flag, on) {\n  return {\n    term: _defineProperty({}, flag, on)\n  };\n};\n\nvar collectTerms = function collectTerms(clauses) {\n  var values = {\n    must: [],\n    mustNot: []\n  };\n\n  var _iterator = _createForOfIteratorHelper(clauses),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var clause = _step.value;\n\n      if (AST.Match.isMustClause(clause)) {\n        values.must.push(clause.value);\n      } else {\n        values.mustNot.push(clause.value);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return values;\n};\n\nvar collectFields = function collectFields(clauses) {\n  var fieldArray = function fieldArray(obj, field, operator) {\n    if (!obj[field]) {\n      obj[field] = {};\n    }\n\n    if (!obj[field][operator]) {\n      obj[field][operator] = [];\n    }\n\n    return obj[field][operator];\n  };\n\n  return clauses.reduce(function (fields, clause) {\n    if (AST.Match.isMustClause(clause)) {\n      if (isArray(clause.value)) {\n        var _fieldArray;\n\n        (_fieldArray = fieldArray(fields.must.or, clause.field, clause.operator)).push.apply(_fieldArray, _toConsumableArray(clause.value));\n      } else {\n        fieldArray(fields.must.and, clause.field, clause.operator).push(clause.value);\n      }\n    } else {\n      if (isArray(clause.value)) {\n        var _fieldArray2;\n\n        (_fieldArray2 = fieldArray(fields.mustNot.or, clause.field, clause.operator)).push.apply(_fieldArray2, _toConsumableArray(clause.value));\n      } else {\n        fieldArray(fields.mustNot.and, clause.field, clause.operator).push(clause.value);\n      }\n    }\n\n    return fields;\n  }, {\n    must: {\n      and: {},\n      or: {}\n    },\n    mustNot: {\n      and: {},\n      or: {}\n    }\n  });\n};\n\nvar clausesToEsQueryDsl = function clausesToEsQueryDsl(_ref) {\n  var fields = _ref.fields,\n      terms = _ref.terms,\n      is = _ref.is;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var extraMustQueries = options.extraMustQueries || [];\n  var extraMustNotQueries = options.extraMustNotQueries || [];\n  var termValuesToQuery = options.termValuesToQuery || _termValuesToQuery;\n  var fieldValuesToQuery = options.fieldValuesToQuery || _fieldValuesToQuery;\n  var isFlagToQuery = options.isFlagToQuery || _isFlagToQuery;\n  var must = [];\n  must.push.apply(must, _toConsumableArray(extraMustQueries));\n  var termMustQuery = termValuesToQuery(terms.must, options);\n\n  if (termMustQuery) {\n    must.push(termMustQuery);\n  }\n\n  Object.keys(fields.must.and).forEach(function (field) {\n    must.push(fieldValuesToQuery(field, fields.must.and[field], 'and'));\n  });\n  Object.keys(fields.must.or).forEach(function (field) {\n    must.push(fieldValuesToQuery(field, fields.must.or[field], 'or'));\n  });\n  is.forEach(function (clause) {\n    must.push(isFlagToQuery(clause.flag, AST.Match.isMustClause(clause)));\n  });\n  var mustNot = [];\n  mustNot.push.apply(mustNot, _toConsumableArray(extraMustNotQueries));\n  var termMustNotQuery = termValuesToQuery(terms.mustNot, options);\n\n  if (termMustNotQuery) {\n    mustNot.push(termMustNotQuery);\n  }\n\n  Object.keys(fields.mustNot.and).forEach(function (field) {\n    mustNot.push(fieldValuesToQuery(field, fields.mustNot.and[field], 'and'));\n  });\n  Object.keys(fields.mustNot.or).forEach(function (field) {\n    mustNot.push(fieldValuesToQuery(field, fields.mustNot.or[field], 'or'));\n  });\n  var bool = {};\n\n  if (must.length !== 0) {\n    bool.must = must;\n  }\n\n  if (mustNot.length !== 0) {\n    bool.must_not = mustNot;\n  }\n\n  return bool;\n};\n\nvar EMPTY_TERMS = {\n  must: [],\n  mustNot: []\n};\nvar EMPTY_FIELDS = {\n  must: {\n    and: {},\n    or: {}\n  },\n  mustNot: {\n    and: {},\n    or: {}\n  }\n};\nexport var astToEsQueryDsl = function astToEsQueryDsl(ast) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (ast.clauses.length === 0) {\n    return {\n      match_all: {}\n    };\n  }\n\n  var terms = collectTerms(ast.getTermClauses());\n  var fields = collectFields(ast.getFieldClauses());\n  var is = ast.getIsClauses();\n  var matchesBool = clausesToEsQueryDsl({\n    terms: terms,\n    fields: fields,\n    is: is\n  }, options);\n  var hasTopMatches = Object.keys(matchesBool).length > 0;\n  var groupClauses = ast.getGroupClauses();\n\n  if (groupClauses.length === 0) {\n    // there are no GroupClauses, everything at top level is combined as a must\n    return {\n      bool: matchesBool\n    };\n  } else {\n    // there is at least one GroupClause, wrap the above clauses in another layer and append the ORs\n    var must = groupClauses.reduce(function (must, groupClause) {\n      var clauses = groupClause.value.reduce(function (clauses, clause) {\n        if (AST.Term.isInstance(clause)) {\n          clauses.push(clausesToEsQueryDsl({\n            terms: collectTerms([clause]),\n            fields: EMPTY_FIELDS,\n            is: []\n          }));\n        } else if (AST.Field.isInstance(clause)) {\n          clauses.push(clausesToEsQueryDsl({\n            terms: EMPTY_TERMS,\n            fields: collectFields([clause]),\n            is: []\n          }));\n        } else if (AST.Is.isInstance(clause)) {\n          clauses.push(clausesToEsQueryDsl({\n            terms: EMPTY_TERMS,\n            fields: EMPTY_FIELDS,\n            is: [clause]\n          }));\n        }\n\n        return clauses;\n      }, []);\n      must.push({\n        bool: {\n          should: clauses.map(function (clause) {\n            return {\n              bool: clause\n            };\n          })\n        }\n      });\n      return must;\n    }, hasTopMatches // only include the first match group if there are any conditions\n    ? [{\n      bool: matchesBool\n    }] : []);\n    return {\n      bool: {\n        must: must\n      }\n    };\n  }\n};","map":{"version":3,"sources":["/Users/inwoo/Projects/coldcallproject/coldcallproject/node_modules/@elastic/eui/es/components/search_bar/query/ast_to_es_query_dsl.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","return","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","Object","prototype","toString","call","slice","constructor","name","from","test","iter","len","arr2","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","printIso8601","isDateValue","dateValue","AST","isDateLike","isString","keysOf","processDateOperation","operator","granularity","resolve","expression","Operator","GT","concat","es","GTE","LT","LTE","_termValuesToQuery","values","options","body","query","join","defaultFields","fields","simple_query_string","_fieldValuesToQuery","field","operations","andOr","queries","forEach","EQ","_terms","phrases","dates","push","match","apply","map","phrase","match_phrase","operation","range","bool","_isFlagToQuery","flag","on","term","collectTerms","clauses","must","mustNot","_iterator","_step","clause","Match","isMustClause","collectFields","fieldArray","reduce","_fieldArray","or","and","_fieldArray2","clausesToEsQueryDsl","_ref","terms","is","arguments","undefined","extraMustQueries","extraMustNotQueries","termValuesToQuery","fieldValuesToQuery","isFlagToQuery","termMustQuery","keys","termMustNotQuery","must_not","EMPTY_TERMS","EMPTY_FIELDS","astToEsQueryDsl","ast","match_all","getTermClauses","getFieldClauses","getIsClauses","matchesBool","hasTopMatches","groupClauses","getGroupClauses","groupClause","Term","isInstance","Field","Is","should"],"mappings":"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","sourcesContent":["function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { printIso8601 } from './date_format';\nimport { isDateValue, dateValue } from './date_value';\nimport { AST } from './ast';\nimport { isArray, isDateLike, isString } from '../../../services/predicate';\nimport { keysOf } from '../../common';\n\nvar processDateOperation = function processDateOperation(value, operator) {\n  var granularity = value.granularity,\n      resolve = value.resolve;\n  var expression = printIso8601(resolve());\n\n  if (!granularity) {\n    return {\n      operator: operator,\n      expression: expression\n    };\n  }\n\n  switch (operator) {\n    case AST.Operator.GT:\n      expression = \"\".concat(expression, \"||+1\").concat(granularity.es, \"/\").concat(granularity.es);\n      return {\n        operator: AST.Operator.GTE,\n        expression: expression\n      };\n\n    case AST.Operator.GTE:\n      expression = \"\".concat(expression, \"||/\").concat(granularity.es);\n      return {\n        operator: operator,\n        expression: expression\n      };\n\n    case AST.Operator.LT:\n      expression = \"\".concat(expression, \"||/\").concat(granularity.es);\n      return {\n        operator: operator,\n        expression: expression\n      };\n\n    case AST.Operator.LTE:\n      expression = \"\".concat(expression, \"||+1\").concat(granularity.es, \"/\").concat(granularity.es);\n      return {\n        operator: AST.Operator.LT,\n        expression: expression\n      };\n\n    default:\n      expression = \"\".concat(expression, \"||/\").concat(granularity.es);\n      return {\n        expression: expression\n      };\n  }\n};\n\nexport var _termValuesToQuery = function _termValuesToQuery(values, options) {\n  var body = {\n    query: values.join(' ')\n  };\n\n  if (body.query === '') {\n    return;\n  }\n\n  if (options.defaultFields) {\n    body.fields = options.defaultFields;\n  }\n\n  return {\n    simple_query_string: body\n  };\n};\nexport var _fieldValuesToQuery = function _fieldValuesToQuery(field, operations, andOr) {\n  var queries = [];\n  keysOf(operations).forEach(function (operator) {\n    var values = operations[operator];\n\n    switch (operator) {\n      case AST.Operator.EQ:\n        var _terms = [];\n        var phrases = [];\n        var dates = [];\n        values.forEach(function (value) {\n          if (isDateValue(value)) {\n            dates.push(value);\n          } else if (isDateLike(value)) {\n            dates.push(dateValue(value));\n          } else if (isString(value) && value.match(/\\s/)) {\n            phrases.push(value);\n          } else {\n            _terms.push(value);\n          }\n        });\n\n        if (_terms.length > 0) {\n          queries.push({\n            match: _defineProperty({}, field, {\n              query: _terms.join(' '),\n              operator: andOr\n            })\n          });\n        }\n\n        if (phrases.length > 0) {\n          queries.push.apply(queries, _toConsumableArray(phrases.map(function (phrase) {\n            return {\n              match_phrase: _defineProperty({}, field, phrase)\n            };\n          })));\n        }\n\n        if (dates.length > 0) {\n          queries.push.apply(queries, _toConsumableArray(dates.map(function (value) {\n            return {\n              match: _defineProperty({}, field, processDateOperation(value).expression)\n            };\n          })));\n        }\n\n        break;\n\n      default:\n        values.forEach(function (value) {\n          if (isDateValue(value)) {\n            var operation = processDateOperation(value, operator);\n            queries.push({\n              range: _defineProperty({}, field, _defineProperty({}, operation.operator, operation.expression))\n            });\n          } else {\n            queries.push({\n              range: _defineProperty({}, field, _defineProperty({}, operator, value))\n            });\n          }\n        });\n    }\n  });\n\n  if (queries.length === 1) {\n    return queries[0];\n  }\n\n  var key = andOr === 'and' ? 'must' : 'should';\n  return {\n    bool: _defineProperty({}, key, [].concat(queries))\n  };\n};\nexport var _isFlagToQuery = function _isFlagToQuery(flag, on) {\n  return {\n    term: _defineProperty({}, flag, on)\n  };\n};\n\nvar collectTerms = function collectTerms(clauses) {\n  var values = {\n    must: [],\n    mustNot: []\n  };\n\n  var _iterator = _createForOfIteratorHelper(clauses),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var clause = _step.value;\n\n      if (AST.Match.isMustClause(clause)) {\n        values.must.push(clause.value);\n      } else {\n        values.mustNot.push(clause.value);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return values;\n};\n\nvar collectFields = function collectFields(clauses) {\n  var fieldArray = function fieldArray(obj, field, operator) {\n    if (!obj[field]) {\n      obj[field] = {};\n    }\n\n    if (!obj[field][operator]) {\n      obj[field][operator] = [];\n    }\n\n    return obj[field][operator];\n  };\n\n  return clauses.reduce(function (fields, clause) {\n    if (AST.Match.isMustClause(clause)) {\n      if (isArray(clause.value)) {\n        var _fieldArray;\n\n        (_fieldArray = fieldArray(fields.must.or, clause.field, clause.operator)).push.apply(_fieldArray, _toConsumableArray(clause.value));\n      } else {\n        fieldArray(fields.must.and, clause.field, clause.operator).push(clause.value);\n      }\n    } else {\n      if (isArray(clause.value)) {\n        var _fieldArray2;\n\n        (_fieldArray2 = fieldArray(fields.mustNot.or, clause.field, clause.operator)).push.apply(_fieldArray2, _toConsumableArray(clause.value));\n      } else {\n        fieldArray(fields.mustNot.and, clause.field, clause.operator).push(clause.value);\n      }\n    }\n\n    return fields;\n  }, {\n    must: {\n      and: {},\n      or: {}\n    },\n    mustNot: {\n      and: {},\n      or: {}\n    }\n  });\n};\n\nvar clausesToEsQueryDsl = function clausesToEsQueryDsl(_ref) {\n  var fields = _ref.fields,\n      terms = _ref.terms,\n      is = _ref.is;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var extraMustQueries = options.extraMustQueries || [];\n  var extraMustNotQueries = options.extraMustNotQueries || [];\n  var termValuesToQuery = options.termValuesToQuery || _termValuesToQuery;\n  var fieldValuesToQuery = options.fieldValuesToQuery || _fieldValuesToQuery;\n  var isFlagToQuery = options.isFlagToQuery || _isFlagToQuery;\n  var must = [];\n  must.push.apply(must, _toConsumableArray(extraMustQueries));\n  var termMustQuery = termValuesToQuery(terms.must, options);\n\n  if (termMustQuery) {\n    must.push(termMustQuery);\n  }\n\n  Object.keys(fields.must.and).forEach(function (field) {\n    must.push(fieldValuesToQuery(field, fields.must.and[field], 'and'));\n  });\n  Object.keys(fields.must.or).forEach(function (field) {\n    must.push(fieldValuesToQuery(field, fields.must.or[field], 'or'));\n  });\n  is.forEach(function (clause) {\n    must.push(isFlagToQuery(clause.flag, AST.Match.isMustClause(clause)));\n  });\n  var mustNot = [];\n  mustNot.push.apply(mustNot, _toConsumableArray(extraMustNotQueries));\n  var termMustNotQuery = termValuesToQuery(terms.mustNot, options);\n\n  if (termMustNotQuery) {\n    mustNot.push(termMustNotQuery);\n  }\n\n  Object.keys(fields.mustNot.and).forEach(function (field) {\n    mustNot.push(fieldValuesToQuery(field, fields.mustNot.and[field], 'and'));\n  });\n  Object.keys(fields.mustNot.or).forEach(function (field) {\n    mustNot.push(fieldValuesToQuery(field, fields.mustNot.or[field], 'or'));\n  });\n  var bool = {};\n\n  if (must.length !== 0) {\n    bool.must = must;\n  }\n\n  if (mustNot.length !== 0) {\n    bool.must_not = mustNot;\n  }\n\n  return bool;\n};\n\nvar EMPTY_TERMS = {\n  must: [],\n  mustNot: []\n};\nvar EMPTY_FIELDS = {\n  must: {\n    and: {},\n    or: {}\n  },\n  mustNot: {\n    and: {},\n    or: {}\n  }\n};\nexport var astToEsQueryDsl = function astToEsQueryDsl(ast) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (ast.clauses.length === 0) {\n    return {\n      match_all: {}\n    };\n  }\n\n  var terms = collectTerms(ast.getTermClauses());\n  var fields = collectFields(ast.getFieldClauses());\n  var is = ast.getIsClauses();\n  var matchesBool = clausesToEsQueryDsl({\n    terms: terms,\n    fields: fields,\n    is: is\n  }, options);\n  var hasTopMatches = Object.keys(matchesBool).length > 0;\n  var groupClauses = ast.getGroupClauses();\n\n  if (groupClauses.length === 0) {\n    // there are no GroupClauses, everything at top level is combined as a must\n    return {\n      bool: matchesBool\n    };\n  } else {\n    // there is at least one GroupClause, wrap the above clauses in another layer and append the ORs\n    var must = groupClauses.reduce(function (must, groupClause) {\n      var clauses = groupClause.value.reduce(function (clauses, clause) {\n        if (AST.Term.isInstance(clause)) {\n          clauses.push(clausesToEsQueryDsl({\n            terms: collectTerms([clause]),\n            fields: EMPTY_FIELDS,\n            is: []\n          }));\n        } else if (AST.Field.isInstance(clause)) {\n          clauses.push(clausesToEsQueryDsl({\n            terms: EMPTY_TERMS,\n            fields: collectFields([clause]),\n            is: []\n          }));\n        } else if (AST.Is.isInstance(clause)) {\n          clauses.push(clausesToEsQueryDsl({\n            terms: EMPTY_TERMS,\n            fields: EMPTY_FIELDS,\n            is: [clause]\n          }));\n        }\n\n        return clauses;\n      }, []);\n      must.push({\n        bool: {\n          should: clauses.map(function (clause) {\n            return {\n              bool: clause\n            };\n          })\n        }\n      });\n      return must;\n    }, hasTopMatches // only include the first match group if there are any conditions\n    ? [{\n      bool: matchesBool\n    }] : []);\n    return {\n      bool: {\n        must: must\n      }\n    };\n  }\n};"]},"metadata":{},"sourceType":"module"}