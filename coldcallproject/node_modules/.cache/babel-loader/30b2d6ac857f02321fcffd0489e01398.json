{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from \"prop-types\";\nimport unified from 'unified';\nimport { defaultProcessingPlugins, defaultParsingPlugins } from './plugins/markdown_default_plugins';\nexport var EuiMarkdownFormat = function EuiMarkdownFormat(_ref) {\n  var children = _ref.children,\n      _ref$parsingPluginLis = _ref.parsingPluginList,\n      parsingPluginList = _ref$parsingPluginLis === void 0 ? defaultParsingPlugins : _ref$parsingPluginLis,\n      _ref$processingPlugin = _ref.processingPluginList,\n      processingPluginList = _ref$processingPlugin === void 0 ? defaultProcessingPlugins : _ref$processingPlugin;\n  var processor = useMemo(function () {\n    return unified().use(parsingPluginList).use(processingPluginList);\n  }, [parsingPluginList, processingPluginList]);\n  var result = useMemo(function () {\n    try {\n      var _ref2;\n\n      var processed = processor.processSync(children); // `.result` is intentionally `unknown` (https://github.com/vfile/vfile/pull/53)\n      // cast to something expected.\n\n      return (_ref2 = processed.result) !== null && _ref2 !== void 0 ? _ref2 : processed.contents;\n    } catch (e) {\n      return children;\n    }\n  }, [children, processor]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiMarkdownFormat\"\n  }, result);\n};\nEuiMarkdownFormat.propTypes = {\n  children: PropTypes.string.isRequired,\n\n  /** array of unified plugins to parse content into an AST */\n  parsingPluginList: PropTypes.any,\n\n  /** array of unified plugins to convert the AST into a ReactNode */\n  processingPluginList: PropTypes.any\n};","map":{"version":3,"sources":["/Users/inwoo/Projects/coldcallproject/coldcallproject/node_modules/@elastic/eui/es/components/markdown_editor/markdown_format.js"],"names":["React","useMemo","PropTypes","unified","defaultProcessingPlugins","defaultParsingPlugins","EuiMarkdownFormat","_ref","children","_ref$parsingPluginLis","parsingPluginList","_ref$processingPlugin","processingPluginList","processor","use","result","_ref2","processed","processSync","contents","e","createElement","className","propTypes","string","isRequired","any"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,wBAAT,EAAmCC,qBAAnC,QAAgE,oCAAhE;AACA,OAAO,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAC9D,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,qBAAqB,GAAGF,IAAI,CAACG,iBADjC;AAAA,MAEIA,iBAAiB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmCJ,qBAAnC,GAA2DI,qBAFnF;AAAA,MAGIE,qBAAqB,GAAGJ,IAAI,CAACK,oBAHjC;AAAA,MAIIA,oBAAoB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmCP,wBAAnC,GAA8DO,qBAJzF;AAKA,MAAIE,SAAS,GAAGZ,OAAO,CAAC,YAAY;AAClC,WAAOE,OAAO,GAAGW,GAAV,CAAcJ,iBAAd,EAAiCI,GAAjC,CAAqCF,oBAArC,CAAP;AACD,GAFsB,EAEpB,CAACF,iBAAD,EAAoBE,oBAApB,CAFoB,CAAvB;AAGA,MAAIG,MAAM,GAAGd,OAAO,CAAC,YAAY;AAC/B,QAAI;AACF,UAAIe,KAAJ;;AAEA,UAAIC,SAAS,GAAGJ,SAAS,CAACK,WAAV,CAAsBV,QAAtB,CAAhB,CAHE,CAG+C;AACjD;;AAEA,aAAO,CAACQ,KAAK,GAAGC,SAAS,CAACF,MAAnB,MAA+B,IAA/B,IAAuCC,KAAK,KAAK,KAAK,CAAtD,GAA0DA,KAA1D,GAAkEC,SAAS,CAACE,QAAnF;AACD,KAPD,CAOE,OAAOC,CAAP,EAAU;AACV,aAAOZ,QAAP;AACD;AACF,GAXmB,EAWjB,CAACA,QAAD,EAAWK,SAAX,CAXiB,CAApB;AAYA,SAAO,aAAab,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AAC7CC,IAAAA,SAAS,EAAE;AADkC,GAA3B,EAEjBP,MAFiB,CAApB;AAGD,CAxBM;AAyBPT,iBAAiB,CAACiB,SAAlB,GAA8B;AAC5Bf,EAAAA,QAAQ,EAAEN,SAAS,CAACsB,MAAV,CAAiBC,UADC;;AAG5B;AACAf,EAAAA,iBAAiB,EAAER,SAAS,CAACwB,GAJD;;AAM5B;AACAd,EAAAA,oBAAoB,EAAEV,SAAS,CAACwB;AAPJ,CAA9B","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from \"prop-types\";\nimport unified from 'unified';\nimport { defaultProcessingPlugins, defaultParsingPlugins } from './plugins/markdown_default_plugins';\nexport var EuiMarkdownFormat = function EuiMarkdownFormat(_ref) {\n  var children = _ref.children,\n      _ref$parsingPluginLis = _ref.parsingPluginList,\n      parsingPluginList = _ref$parsingPluginLis === void 0 ? defaultParsingPlugins : _ref$parsingPluginLis,\n      _ref$processingPlugin = _ref.processingPluginList,\n      processingPluginList = _ref$processingPlugin === void 0 ? defaultProcessingPlugins : _ref$processingPlugin;\n  var processor = useMemo(function () {\n    return unified().use(parsingPluginList).use(processingPluginList);\n  }, [parsingPluginList, processingPluginList]);\n  var result = useMemo(function () {\n    try {\n      var _ref2;\n\n      var processed = processor.processSync(children); // `.result` is intentionally `unknown` (https://github.com/vfile/vfile/pull/53)\n      // cast to something expected.\n\n      return (_ref2 = processed.result) !== null && _ref2 !== void 0 ? _ref2 : processed.contents;\n    } catch (e) {\n      return children;\n    }\n  }, [children, processor]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiMarkdownFormat\"\n  }, result);\n};\nEuiMarkdownFormat.propTypes = {\n  children: PropTypes.string.isRequired,\n\n  /** array of unified plugins to parse content into an AST */\n  parsingPluginList: PropTypes.any,\n\n  /** array of unified plugins to convert the AST into a ReactNode */\n  processingPluginList: PropTypes.any\n};"]},"metadata":{},"sourceType":"module"}