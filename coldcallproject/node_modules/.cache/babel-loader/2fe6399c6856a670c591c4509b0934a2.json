{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport visit from 'unist-util-visit';\nexport function markdownLinkValidator() {\n  return function (ast) {\n    visit(ast, 'link', function (_node) {\n      var node = _node;\n\n      if (!validateUrl(node.url)) {\n        mutateLinkToText(node);\n      }\n    });\n  };\n}\nexport function mutateLinkToText(node) {\n  var _;\n\n  node.type = 'text';\n  node.value = \"[\".concat(((_ = node.children[0]) === null || _ === void 0 ? void 0 : _.value) || '', \"](\").concat(node.url, \")\");\n  delete node.children;\n  delete node.title;\n  delete node.url;\n  return node;\n}\nexport function validateUrl(url) {\n  // A link is valid if it starts with http:, https:, or /\n  return /^(https?:|\\/)/.test(url);\n}","map":{"version":3,"sources":["/Users/inwoo/Projects/coldcallproject/coldcallproject/node_modules/@elastic/eui/es/components/markdown_editor/plugins/markdown_link_validator.js"],"names":["visit","markdownLinkValidator","ast","_node","node","validateUrl","url","mutateLinkToText","_","type","value","concat","children","title","test"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAO,SAASC,qBAAT,GAAiC;AACtC,SAAO,UAAUC,GAAV,EAAe;AACpBF,IAAAA,KAAK,CAACE,GAAD,EAAM,MAAN,EAAc,UAAUC,KAAV,EAAiB;AAClC,UAAIC,IAAI,GAAGD,KAAX;;AAEA,UAAI,CAACE,WAAW,CAACD,IAAI,CAACE,GAAN,CAAhB,EAA4B;AAC1BC,QAAAA,gBAAgB,CAACH,IAAD,CAAhB;AACD;AACF,KANI,CAAL;AAOD,GARD;AASD;AACD,OAAO,SAASG,gBAAT,CAA0BH,IAA1B,EAAgC;AACrC,MAAII,CAAJ;;AAEAJ,EAAAA,IAAI,CAACK,IAAL,GAAY,MAAZ;AACAL,EAAAA,IAAI,CAACM,KAAL,GAAa,IAAIC,MAAJ,CAAW,CAAC,CAACH,CAAC,GAAGJ,IAAI,CAACQ,QAAL,CAAc,CAAd,CAAL,MAA2B,IAA3B,IAAmCJ,CAAC,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,CAAC,CAACE,KAA9D,KAAwE,EAAnF,EAAuF,IAAvF,EAA6FC,MAA7F,CAAoGP,IAAI,CAACE,GAAzG,EAA8G,GAA9G,CAAb;AACA,SAAOF,IAAI,CAACQ,QAAZ;AACA,SAAOR,IAAI,CAACS,KAAZ;AACA,SAAOT,IAAI,CAACE,GAAZ;AACA,SAAOF,IAAP;AACD;AACD,OAAO,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AAC/B;AACA,SAAO,gBAAgBQ,IAAhB,CAAqBR,GAArB,CAAP;AACD","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport visit from 'unist-util-visit';\nexport function markdownLinkValidator() {\n  return function (ast) {\n    visit(ast, 'link', function (_node) {\n      var node = _node;\n\n      if (!validateUrl(node.url)) {\n        mutateLinkToText(node);\n      }\n    });\n  };\n}\nexport function mutateLinkToText(node) {\n  var _;\n\n  node.type = 'text';\n  node.value = \"[\".concat(((_ = node.children[0]) === null || _ === void 0 ? void 0 : _.value) || '', \"](\").concat(node.url, \")\");\n  delete node.children;\n  delete node.title;\n  delete node.url;\n  return node;\n}\nexport function validateUrl(url) {\n  // A link is valid if it starts with http:, https:, or /\n  return /^(https?:|\\/)/.test(url);\n}"]},"metadata":{},"sourceType":"module"}