{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { EuiAccordion } from '../accordion';\nimport { htmlIdGenerator } from '../../services';\nimport { useEuiI18n } from '../i18n';\nimport { EuiText } from '../text';\nexport var EuiNotificationEventMessages = function EuiNotificationEventMessages(_ref) {\n  var messages = _ref.messages,\n      eventName = _ref.eventName;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var messagesLength = messages.length;\n  var accordionButtonText = useEuiI18n('euiNotificationEventMessages.accordionButtonText', '+ {messagesLength} more', {\n    messagesLength: messagesLength - 1\n  });\n  var accordionAriaLabelButtonText = useEuiI18n('euiNotificationEventMessages.accordionAriaLabelButtonText', '+ {messagesLength} messages for {eventName}', {\n    messagesLength: messagesLength - 1,\n    eventName: eventName\n  });\n  var accordionHideText = useEuiI18n('euiNotificationEventMessages.accordionHideText', 'hide');\n  var buttonContentText = isOpen ? \"\".concat(accordionButtonText, \" (\").concat(accordionHideText, \")\") : accordionButtonText;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiNotificationEventMessages\"\n  }, messages && messagesLength === 1 ? /*#__PURE__*/React.createElement(EuiText, {\n    size: \"s\",\n    color: \"subdued\"\n  }, /*#__PURE__*/React.createElement(\"p\", null, messages)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EuiText, {\n    size: \"s\",\n    color: \"subdued\"\n  }, /*#__PURE__*/React.createElement(\"p\", null, messages[0])), /*#__PURE__*/React.createElement(EuiAccordion, {\n    onToggle: setIsOpen,\n    buttonProps: {\n      'aria-label': accordionAriaLabelButtonText\n    },\n    id: htmlIdGenerator('euiNotificationEventMessagesAccordion')(),\n    className: \"euiNotificationEventMessages__accordion\",\n    buttonContent: buttonContentText,\n    buttonClassName: \"euiNotificationEventMessages__accordionButton\",\n    arrowDisplay: \"none\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiNotificationEventMessages__accordionContent\"\n  }, messages.map(function (notification, index) {\n    return /*#__PURE__*/React.createElement(EuiText, {\n      size: \"s\",\n      key: index,\n      color: \"subdued\"\n    }, /*#__PURE__*/React.createElement(\"p\", null, notification));\n  }).slice(1)))));\n};\nEuiNotificationEventMessages.propTypes = {\n  /*\n     * An array of strings that get individually wrapped in `<p>` tags\n     */\n  messages: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n\n  /**\n     * A unique, human-friendly name for the event to be used in aria attributes (e.g. \"alert-critical-01\", \"cloud-no-severity-12\", etc..).\n     */\n  eventName: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/inwoo/Projects/coldcallproject/coldcallproject/node_modules/@elastic/eui/es/components/notification/notification_event_messages.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","isArray","React","useState","PropTypes","EuiAccordion","htmlIdGenerator","useEuiI18n","EuiText","EuiNotificationEventMessages","_ref","messages","eventName","_useState","_useState2","isOpen","setIsOpen","messagesLength","accordionButtonText","accordionAriaLabelButtonText","accordionHideText","buttonContentText","concat","createElement","className","size","color","Fragment","onToggle","buttonProps","id","buttonContent","buttonClassName","arrowDisplay","map","notification","index","key","propTypes","arrayOf","string","isRequired"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { EuiAccordion } from '../accordion';\nimport { htmlIdGenerator } from '../../services';\nimport { useEuiI18n } from '../i18n';\nimport { EuiText } from '../text';\nexport var EuiNotificationEventMessages = function EuiNotificationEventMessages(_ref) {\n  var messages = _ref.messages,\n      eventName = _ref.eventName;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var messagesLength = messages.length;\n  var accordionButtonText = useEuiI18n('euiNotificationEventMessages.accordionButtonText', '+ {messagesLength} more', {\n    messagesLength: messagesLength - 1\n  });\n  var accordionAriaLabelButtonText = useEuiI18n('euiNotificationEventMessages.accordionAriaLabelButtonText', '+ {messagesLength} messages for {eventName}', {\n    messagesLength: messagesLength - 1,\n    eventName: eventName\n  });\n  var accordionHideText = useEuiI18n('euiNotificationEventMessages.accordionHideText', 'hide');\n  var buttonContentText = isOpen ? \"\".concat(accordionButtonText, \" (\").concat(accordionHideText, \")\") : accordionButtonText;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiNotificationEventMessages\"\n  }, messages && messagesLength === 1 ? /*#__PURE__*/React.createElement(EuiText, {\n    size: \"s\",\n    color: \"subdued\"\n  }, /*#__PURE__*/React.createElement(\"p\", null, messages)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EuiText, {\n    size: \"s\",\n    color: \"subdued\"\n  }, /*#__PURE__*/React.createElement(\"p\", null, messages[0])), /*#__PURE__*/React.createElement(EuiAccordion, {\n    onToggle: setIsOpen,\n    buttonProps: {\n      'aria-label': accordionAriaLabelButtonText\n    },\n    id: htmlIdGenerator('euiNotificationEventMessagesAccordion')(),\n    className: \"euiNotificationEventMessages__accordion\",\n    buttonContent: buttonContentText,\n    buttonClassName: \"euiNotificationEventMessages__accordionButton\",\n    arrowDisplay: \"none\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"euiNotificationEventMessages__accordionContent\"\n  }, messages.map(function (notification, index) {\n    return /*#__PURE__*/React.createElement(EuiText, {\n      size: \"s\",\n      key: index,\n      color: \"subdued\"\n    }, /*#__PURE__*/React.createElement(\"p\", null, notification));\n  }).slice(1)))));\n};\nEuiNotificationEventMessages.propTypes = {\n  /*\n     * An array of strings that get individually wrapped in `<p>` tags\n     */\n  messages: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n\n  /**\n     * A unique, human-friendly name for the event to be used in aria attributes (e.g. \"alert-critical-01\", \"cloud-no-severity-12\", etc..).\n     */\n  eventName: PropTypes.string.isRequired\n};"]},"metadata":{},"sourceType":"module"}