{"ast":null,"code":"/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { EuiToolTip } from '../../tool_tip';\nimport { EuiIcon } from '../../icon';\nimport { EuiCodeBlock } from '../../code';\nvar tooltipPlugin = {\n  name: 'tooltipPlugin',\n  button: {\n    label: 'Tooltip',\n    iconType: 'editorComment'\n  },\n  formatting: {\n    prefix: '!{tooltip[',\n    suffix: ']()}',\n    trimFirst: true\n  },\n  helpText: /*#__PURE__*/React.createElement(EuiCodeBlock, {\n    language: \"md\",\n    paddingSize: \"s\",\n    fontSize: \"l\"\n  }, '!{tooltip[anchor text](helpful description)}')\n};\n\nvar TooltipParser = function TooltipParser() {\n  var Parser = this.Parser;\n  var tokenizers = Parser.prototype.inlineTokenizers;\n  var methods = Parser.prototype.inlineMethods;\n\n  var tokenizeTooltip = function tokenizeTooltip(eat, value, silent) {\n    if (value.startsWith('!{tooltip') === false) return false;\n    var nextChar = value[9];\n    if (nextChar !== '[') return false; // this isn't actually a tooltip\n\n    var index = 9;\n\n    function readArg(open, close) {\n      if (value[index] !== open) throw 'Expected left bracket';\n      index++;\n      var body = '';\n      var openBrackets = 0;\n\n      for (; index < value.length; index++) {\n        var char = value[index];\n\n        if (char === close && openBrackets === 0) {\n          index++;\n          return body;\n        } else if (char === close) {\n          openBrackets--;\n        } else if (char === open) {\n          openBrackets++;\n        }\n\n        body += char;\n      }\n\n      return '';\n    }\n\n    var tooltipAnchor = readArg('[', ']');\n    var tooltipText = readArg('(', ')');\n    var now = eat.now();\n\n    if (!tooltipAnchor) {\n      this.file.info('No tooltip anchor found', {\n        line: now.line,\n        column: now.column + 10\n      });\n    }\n\n    if (!tooltipText) {\n      this.file.info('No tooltip text found', {\n        line: now.line,\n        column: now.column + 12 + tooltipAnchor.length\n      });\n    }\n\n    if (!tooltipText || !tooltipAnchor) return false;\n\n    if (silent) {\n      return true;\n    }\n\n    now.column += 10;\n    now.offset += 10;\n    var children = this.tokenizeInline(tooltipAnchor, now);\n    return eat(\"!{tooltip[\".concat(tooltipAnchor, \"](\").concat(tooltipText, \")}\"))({\n      type: 'tooltipPlugin',\n      content: tooltipText,\n      children: children\n    });\n  };\n\n  tokenizeTooltip.notInLink = true;\n\n  tokenizeTooltip.locator = function (value, fromIndex) {\n    return value.indexOf('!{tooltip', fromIndex);\n  };\n\n  tokenizers.tooltip = tokenizeTooltip;\n  methods.splice(methods.indexOf('text'), 0, 'tooltip');\n};\n\nvar tooltipMarkdownRenderer = function tooltipMarkdownRenderer(_ref) {\n  var content = _ref.content,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(EuiToolTip, {\n    content: content\n  }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(\"strong\", null, children), /*#__PURE__*/React.createElement(EuiIcon, {\n    type: \"questionInCircle\",\n    className: \"euiMarkdownTooltip__icon\"\n  }))));\n};\n\ntooltipMarkdownRenderer.propTypes = {\n  type: PropTypes.oneOf([\"tooltipPlugin\"]).isRequired,\n  content: PropTypes.string.isRequired,\n  position: PropTypes.shape({\n    start: PropTypes.shape({\n      line: PropTypes.number.isRequired,\n      column: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired\n    }).isRequired,\n    end: PropTypes.shape({\n      line: PropTypes.number.isRequired,\n      column: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport { tooltipPlugin as plugin, TooltipParser as parser, tooltipMarkdownRenderer as renderer };","map":{"version":3,"sources":["/Users/inwoo/Projects/coldcallproject/coldcallproject/node_modules/@elastic/eui/es/components/markdown_editor/plugins/markdown_tooltip.js"],"names":["React","PropTypes","EuiToolTip","EuiIcon","EuiCodeBlock","tooltipPlugin","name","button","label","iconType","formatting","prefix","suffix","trimFirst","helpText","createElement","language","paddingSize","fontSize","TooltipParser","Parser","tokenizers","prototype","inlineTokenizers","methods","inlineMethods","tokenizeTooltip","eat","value","silent","startsWith","nextChar","index","readArg","open","close","body","openBrackets","length","char","tooltipAnchor","tooltipText","now","file","info","line","column","offset","children","tokenizeInline","concat","type","content","notInLink","locator","fromIndex","indexOf","tooltip","splice","tooltipMarkdownRenderer","_ref","className","propTypes","oneOf","isRequired","string","position","shape","start","number","end","plugin","parser","renderer"],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { EuiToolTip } from '../../tool_tip';\nimport { EuiIcon } from '../../icon';\nimport { EuiCodeBlock } from '../../code';\nvar tooltipPlugin = {\n  name: 'tooltipPlugin',\n  button: {\n    label: 'Tooltip',\n    iconType: 'editorComment'\n  },\n  formatting: {\n    prefix: '!{tooltip[',\n    suffix: ']()}',\n    trimFirst: true\n  },\n  helpText: /*#__PURE__*/React.createElement(EuiCodeBlock, {\n    language: \"md\",\n    paddingSize: \"s\",\n    fontSize: \"l\"\n  }, '!{tooltip[anchor text](helpful description)}')\n};\n\nvar TooltipParser = function TooltipParser() {\n  var Parser = this.Parser;\n  var tokenizers = Parser.prototype.inlineTokenizers;\n  var methods = Parser.prototype.inlineMethods;\n\n  var tokenizeTooltip = function tokenizeTooltip(eat, value, silent) {\n    if (value.startsWith('!{tooltip') === false) return false;\n    var nextChar = value[9];\n    if (nextChar !== '[') return false; // this isn't actually a tooltip\n\n    var index = 9;\n\n    function readArg(open, close) {\n      if (value[index] !== open) throw 'Expected left bracket';\n      index++;\n      var body = '';\n      var openBrackets = 0;\n\n      for (; index < value.length; index++) {\n        var char = value[index];\n\n        if (char === close && openBrackets === 0) {\n          index++;\n          return body;\n        } else if (char === close) {\n          openBrackets--;\n        } else if (char === open) {\n          openBrackets++;\n        }\n\n        body += char;\n      }\n\n      return '';\n    }\n\n    var tooltipAnchor = readArg('[', ']');\n    var tooltipText = readArg('(', ')');\n    var now = eat.now();\n\n    if (!tooltipAnchor) {\n      this.file.info('No tooltip anchor found', {\n        line: now.line,\n        column: now.column + 10\n      });\n    }\n\n    if (!tooltipText) {\n      this.file.info('No tooltip text found', {\n        line: now.line,\n        column: now.column + 12 + tooltipAnchor.length\n      });\n    }\n\n    if (!tooltipText || !tooltipAnchor) return false;\n\n    if (silent) {\n      return true;\n    }\n\n    now.column += 10;\n    now.offset += 10;\n    var children = this.tokenizeInline(tooltipAnchor, now);\n    return eat(\"!{tooltip[\".concat(tooltipAnchor, \"](\").concat(tooltipText, \")}\"))({\n      type: 'tooltipPlugin',\n      content: tooltipText,\n      children: children\n    });\n  };\n\n  tokenizeTooltip.notInLink = true;\n\n  tokenizeTooltip.locator = function (value, fromIndex) {\n    return value.indexOf('!{tooltip', fromIndex);\n  };\n\n  tokenizers.tooltip = tokenizeTooltip;\n  methods.splice(methods.indexOf('text'), 0, 'tooltip');\n};\n\nvar tooltipMarkdownRenderer = function tooltipMarkdownRenderer(_ref) {\n  var content = _ref.content,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(EuiToolTip, {\n    content: content\n  }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(\"strong\", null, children), /*#__PURE__*/React.createElement(EuiIcon, {\n    type: \"questionInCircle\",\n    className: \"euiMarkdownTooltip__icon\"\n  }))));\n};\n\ntooltipMarkdownRenderer.propTypes = {\n  type: PropTypes.oneOf([\"tooltipPlugin\"]).isRequired,\n  content: PropTypes.string.isRequired,\n  position: PropTypes.shape({\n    start: PropTypes.shape({\n      line: PropTypes.number.isRequired,\n      column: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired\n    }).isRequired,\n    end: PropTypes.shape({\n      line: PropTypes.number.isRequired,\n      column: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport { tooltipPlugin as plugin, TooltipParser as parser, tooltipMarkdownRenderer as renderer };"]},"metadata":{},"sourceType":"module"}